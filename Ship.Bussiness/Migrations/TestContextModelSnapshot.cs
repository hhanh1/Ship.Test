// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ship.Bussiness.Entities;

#nullable disable

namespace Ship.Bussiness.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ship.Bussiness.Entities.Port", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Ports");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27823f1a-85d0-4260-9e97-3ebba3d9e90b"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(3953),
                            Latitude = 18.531520565000001,
                            Longitude = -72.339592944000003,
                            Name = "Port 0"
                        },
                        new
                        {
                            Id = new Guid("93516d1a-d299-4884-b018-037d36d06e40"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(4009),
                            Latitude = 18.574607041,
                            Longitude = -72.251296693,
                            Name = "Port 1"
                        },
                        new
                        {
                            Id = new Guid("ca3db14b-4d78-4b04-b683-da1dad29b681"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(4011),
                            Latitude = 18.516792489,
                            Longitude = -72.323154474000006,
                            Name = "Port 2"
                        },
                        new
                        {
                            Id = new Guid("a2a267ef-db40-451f-aad7-f1921319172c"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(4021),
                            Latitude = 18.562286259,
                            Longitude = -72.329204395000005,
                            Name = "Port 3"
                        },
                        new
                        {
                            Id = new Guid("9f9e7e11-f863-4ca7-84f1-47aa237c14c7"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(4029),
                            Latitude = 18.614120378999999,
                            Longitude = -72.252213038999997,
                            Name = "Port 4"
                        },
                        new
                        {
                            Id = new Guid("7ef940bd-0736-480e-bb33-4d8239774da0"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(4033),
                            Latitude = 18.628338124999999,
                            Longitude = -72.253912600000007,
                            Name = "Port 5"
                        },
                        new
                        {
                            Id = new Guid("cd3ab506-2a73-4204-8f61-479c4f71fcc9"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(4036),
                            Latitude = 18.556417154000002,
                            Longitude = -72.233779733000006,
                            Name = "Port 6"
                        },
                        new
                        {
                            Id = new Guid("a42e4ee7-1fee-493a-87d1-38d4cdb9a12f"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(4038),
                            Latitude = 18.536163824999999,
                            Longitude = -72.306846309999997,
                            Name = "Port 7"
                        },
                        new
                        {
                            Id = new Guid("68e7d233-a727-43f9-87fb-5383f6390037"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(4040),
                            Latitude = 18.552284645,
                            Longitude = -72.282348534999997,
                            Name = "Port 8"
                        },
                        new
                        {
                            Id = new Guid("117d495d-e3e3-4cd7-a543-814eae32a08e"),
                            CreatedDate = new DateTime(2023, 5, 22, 7, 27, 26, 259, DateTimeKind.Utc).AddTicks(4043),
                            Latitude = 18.525324779000002,
                            Longitude = -72.284319377000003,
                            Name = "Port 9"
                        });
                });

            modelBuilder.Entity("Ship.Bussiness.Entities.Ship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Velocity")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Ships");
                });
#pragma warning restore 612, 618
        }
    }
}
